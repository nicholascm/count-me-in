{"version":3,"file":"appBundle.js","sourceRoot":"","sources":["../../source/app.ts","../../source/homeController.ts","../../source/SearchController.ts","../../source/EventController.ts","../../source/controllers/AuthController.ts","../../source/controllers/AccountController.ts","../../source/services/EventService.ts","../../source/services/AuthService.ts"],"names":[],"mappings":"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","sourcesContent":["// Ionic Starter App\r\n\r\n// angular.module is a global place for creating, registering and retrieving Angular modules\r\n// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)\r\n// the 2nd parameter is an array of 'requires'\r\n// 'starter.services' is found in services.js\r\n// 'starter.controllers' is found in controllers.js\r\nconst eventApp = angular.module('starter', ['ionic', 'ngStorage']); \r\n\r\neventApp\r\n\r\n.run(function($ionicPlatform) {\r\n  $ionicPlatform.ready(function() {\r\n    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\r\n    // for form inputs)\r\n      if (cordova.platformId === 'ios' && window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard) {\r\n        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\r\n        cordova.plugins.Keyboard.disableScroll(true);\r\n    }\r\n    if (window.StatusBar) {\r\n      // org.apache.cordova.statusbar required\r\n      StatusBar.styleDefault();\r\n    }\r\n  });\r\n})\r\n\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n\r\n        // Ionic uses AngularUI Router which uses the concept of states\r\n        // Learn more here: https://github.com/angular-ui/ui-router\r\n        // Set up the various states which the app can be in.\r\n        // Each state's controller can be found in controllers.js\r\n        $stateProvider\r\n\r\n            // setup an abstract state for the tabs directive\r\n             .state('authenticate', {\r\n                    url: '/auth', \r\n                    templateUrl: 'templates/authentication.html', \r\n                    controller: 'AuthController', \r\n                    controllerAs: 'auth'\r\n            })         \r\n          \r\n            .state('tab', {\r\n                url: '/tab',\r\n                abstract: true,\r\n                templateUrl: 'templates/tabs.html'\r\n            })\r\n\r\n            // Each tab has its own nav history stack:\r\n\r\n            /*\r\n            .state('tab.dash', {\r\n                url: '/dash',\r\n                views: {\r\n                    'tab-dash': {\r\n                        templateUrl: 'templates/tab-dash.html',\r\n                        controller: 'DashCtrl'\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('tab.chats', {\r\n                url: '/chats',\r\n                views: {\r\n                    'tab-chats': {\r\n                        templateUrl: 'templates/tab-chats.html',\r\n                        controller: 'ChatsCtrl'\r\n                    }\r\n                }\r\n            })\r\n            .state('tab.chat-detail', {\r\n                url: '/chats/:chatId',\r\n                views: {\r\n                    'tab-chats': {\r\n                        templateUrl: 'templates/chat-detail.html',\r\n                        controller: 'ChatDetailCtrl'\r\n                    }\r\n                }\r\n            })\r\n            */\r\n\r\n            //works\r\n            .state('tab.home', {\r\n                url: '/home',\r\n                views: {\r\n                    'tab-home': {\r\n                        templateUrl: 'templates/tab-home.html',\r\n                        controller: 'HomeController',\r\n                        controllerAs: 'Ctrl'\r\n                    }\r\n                }\r\n            })\r\n\r\n           .state('tab.home-search', {\r\n                url: '/home/search',  \r\n               views: {\r\n                'tab-home': {\r\n                    templateUrl: 'templates/tab-search.html',\r\n                    controller: 'SearchController',\r\n                    controllerAs: 'Srch'\r\n                }\r\n              }\r\n           })\r\n\r\n            .state('tab.home-search.event', {\r\n                url: '/home/event',\r\n                views: {\r\n                    'tab-home': {\r\n                        templateUrl: 'templates/event.html',\r\n                        controller: 'EventController',\r\n                        controllerAs: 'Event'\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('tab.search', {\r\n                url: '/search',\r\n                views: {\r\n                    'tab-search': {\r\n                        templateUrl: 'templates/tab-search.html',\r\n                        controller: 'SearchController',\r\n                        controllerAs: 'Srch'\r\n                    }\r\n                }\r\n            })\r\n\r\n            .state('tab.account', {\r\n                url: '/account',\r\n                views: {\r\n                'tab-account': {\r\n                    templateUrl: 'templates/tab-account.html',\r\n                    controller: 'AccountController', \r\n                    controllerAs: 'Acct'\r\n                }\r\n                }\r\n            });\r\n\r\n            // if none of the above states are matched, use this as the fallback\r\n            $urlRouterProvider.otherwise('/tab/home');\r\n\r\n});","/// <reference path=\"../typings/angularjs/angular.d.ts\" />\r\n\r\n class HomeController {\r\n\r\n        public static AngularDependencies = ['AuthService', 'EventService', HomeController];\r\n\r\n        constructor(private servAuth: AuthService, private eventServ: EventService) {\r\n            \r\n            this.testAuthRoute(); \r\n\r\n            this.getUserEvents(); \r\n        }; \r\n\r\n        private header: string = \"My Events\";\r\n\r\n        private Zipcode: string = \"347\"; \r\n\r\n        private updateStatusOnEvent(id, status) {\r\n            let eventToUpdate = this.events.filter((event) => event.id == id); \r\n            eventToUpdate[0].status = status; \r\n        }\r\n\r\n        private testAuthRoute() {\r\n            if(this.servAuth.userLoggedIn()) {\r\n            console.log(this.servAuth.getToken()); \r\n            this.servAuth.testRoute().then(\r\n                data => console.log(data), \r\n                error => console.log(error)  \r\n            )\r\n            } else {\r\n                console.log('not logged in'); \r\n            }\r\n        }\r\n\r\n        private showNoEventMessage() {\r\n            this.events.length == 0 ? true : false; \r\n        }\r\n\r\n        public getUserEvents() {\r\n            this.eventServ.getUserEvents().then(\r\n                response => console.log(response), \r\n                error => console.log(error)\r\n            );\r\n        }\r\n\r\n        //this will make a call to the event service for the user who is logged in \r\n        private events = []; \r\n\r\n    }\r\n\r\neventApp.controller('HomeController', HomeController.AngularDependencies); ","interface ISearchResults {\r\n    data: any \r\n} \r\n\r\nclass SearchController {\r\n\r\n    static AngularDependencies = ['$scope','$ionicLoading', '$location', 'EventService', 'AuthService', SearchController]; \r\n\r\n    constructor($scope: ng.IScope, private $ionicLoading, private $location,  private eventService: EventService, private servAuth: AuthService) {\r\n        \r\n        $scope.$watch(() => { return this.searchText; }, (newValue, oldValue) => {\r\n            if (newValue.length == 5) {\r\n                this.getYelpResults();\r\n            }\r\n            else if (newValue.length < 5) {\r\n                this.searchResults = [];\r\n            }\r\n            else if (newValue.length > 5) {\r\n                this.searchText = this.searchText.slice(0, 5); \r\n            }\r\n        }); \r\n    \r\n    }; \r\n\r\n    public searchText: string; \r\n\r\n    private searchResults = []; \r\n    \r\n    public findOrCreateEvent(yelp_id: number) {\r\n        if(this.servAuth.userLoggedIn()) {\r\n            this.eventService.findOrCreateEvent({\r\n                yelp_id: yelp_id, \r\n                user_id: 5\r\n            }).then(\r\n                (data) => {\r\n                    console.log(data);\r\n                    this.$location.path('/#/tab/home'); }, \r\n                (error) => {\r\n                    console.log(error); }\r\n                );\r\n        } else {\r\n            alert('You need to be signed in in order to attend events.'); \r\n        }\r\n    } \r\n\r\n    public getYelpResults() {\r\n        this.$ionicLoading.show({\r\n            template: 'Hold up while we search the globe...'\r\n        }); \r\n        \r\n        this.eventService.getEvents({\r\n                search_term: \"burgers\", \r\n                location: this.searchText \r\n                }).then(\r\n                (response: ISearchResults)  => { \r\n                    console.log(response.data); \r\n                    this.searchResults = response.data; \r\n                    this.$ionicLoading.hide() \r\n                }, error => { \r\n                    console.log(error); \r\n                    this.$ionicLoading.hide();  \r\n                }); \r\n    }\r\n\r\n}\r\n\r\neventApp.controller('SearchController', SearchController.AngularDependencies); ","class EventController {\r\n    static AngularDependencies = ['$scope', EventController];  \r\n\r\n    constructor($scope: ng.IScope) {\r\n\r\n    }\r\n\r\n    public test = \"test\"; \r\n}","class AuthController { \r\n    \r\n    public static AngularDependencies = ['AuthService','$ionicLoading', '$location', AuthController]; \r\n\r\n    constructor(private servAuth: AuthService, private $ionicLoading, private $location) {\r\n        \r\n    }\r\n\r\n    public name: string; \r\n    public username: string; \r\n    public password: string; \r\n\r\n    private signup() {\r\n        this.servAuth.signup({\r\n            name: this.name, \r\n            email: this.username, \r\n            password: this.password\r\n        }).then(() => alert(\"success\"), () => alert(\"failure\")); \r\n    }\r\n\r\n    private login() {\r\n        this.$ionicLoading.show({\r\n            template: \"Logging you in\"\r\n        }); \r\n        this.servAuth.login({\r\n            name: this.name, \r\n            email: this.username, \r\n            password: this.password\r\n        }).then(\r\n            (data) => {\r\n                this.$ionicLoading.hide(); \r\n                console.log('success', data); \r\n                this.servAuth.storeUser(data); \r\n\r\n                this.$location.path('/#/tab/home'); \r\n            }, \r\n            (e)=>  {\r\n                console.log('fail', e); \r\n                this.$ionicLoading.hide(); \r\n            });\r\n    }\r\n}\r\n\r\neventApp.controller('AuthController', AuthController.AngularDependencies); \r\n\r\n","class AccountController { \r\n    \r\n    public static AngularDependencies = ['AuthService', AccountController]; \r\n\r\n    constructor(private servAuth: AuthService) {\r\n\r\n    }\r\n\r\n    public logOutCurrentUser() {\r\n        this.servAuth.logout();\r\n        console.log(this.servAuth.getToken());  \r\n    }\r\n\r\n}\r\n\r\neventApp.controller('AccountController', AccountController.AngularDependencies); ","interface IEventSearch {\r\n    search_term: string,  \r\n    location: string, \r\n}\r\n\r\nclass EventService {\r\n\r\n    public static angularDependencies = ['$http','AuthService', EventService]; \r\n\r\n    protected APIURL: string = 'http://events.app/api/'; \r\n\r\n    constructor(private $http: ng.IHttpService, private servAuth: AuthService) {\r\n\r\n    }\r\n\r\n    getEvents (data: IEventSearch){\r\n        return this.$http({\r\n            method: \"GET\", \r\n            url: this.APIURL+'yelp/search',\r\n            params: data\r\n        }); \r\n\r\n    }\r\n    \r\n    //TODO: Fix this piece so that the current events for the user for the current day can be shown - need to send user_id with the request for the API \r\n\r\n    getUserEvents () {\r\n        console.log(this.servAuth.getUserInfo().id); \r\n        return this.$http({\r\n            method: \"GET\", \r\n            url: this.APIURL+'events/search/'+ this.servAuth.getUserInfo().id\r\n        });\r\n    } \r\n\r\n    //TODO: use this service (unfinished) to add new events after the search\r\n    findOrCreateEvent(data) {\r\n        return this.$http({\r\n            method: \"POST\", \r\n            url: this.APIURL+'events',\r\n            data: data\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\neventApp.service('EventService', EventService.angularDependencies); \r\n","interface IUser { \r\n    name: string, \r\n    email: string, \r\n    password: string\r\n}\r\n\r\nclass AuthService {\r\n\r\n    public static angularDependencies = ['$http','$localStorage', AuthService]; \r\n\r\n    protected APIURL: string = 'http://events.app/api/'; \r\n\r\n    constructor(private $http: ng.IHttpService, private $localStorage) {\r\n\r\n    }  \r\n\r\n    public login(credentials: IUser) {\r\n        return this.$http({\r\n            method: 'POST', \r\n            url: this.APIURL+'authenticate',\r\n            data: credentials\r\n        }); \r\n    }\r\n\r\n    public logout() {\r\n        this.$localStorage.token = \"\"; \r\n    }\r\n\r\n    public signup(credentials: IUser) {\r\n        return this.$http({\r\n            method: 'POST', \r\n            url: this.APIURL+'signup',\r\n            data: credentials\r\n        }); \r\n    }\r\n\r\n    public storeUser(user: any) {\r\n        this.$localStorage.user = user; \r\n    }\r\n\r\n    //route only here for testing use of authentication-required endpoints - doesn't belong here\r\n\r\n    public testRoute() {\r\n        return this.$http({\r\n            method: 'GET', \r\n            url: this.APIURL+'authenticate',\r\n            params: {\r\n                token: this.getToken() \r\n            }\r\n        }); \r\n    }\r\n\r\n    public userLoggedIn():boolean {\r\n        if (this.$localStorage.user == \"\") {\r\n            return false; \r\n        } \r\n        return true;     \r\n    }\r\n\r\n    public getToken(): string {\r\n        if (this.$localStorage.user == \"\"){\r\n            console.log(\"user not logged in\"); \r\n        }\r\n        return this.$localStorage.user.data.token; \r\n    }\r\n    //TODO: Make this so we aren't storing sensitive information from the server, also fix the server not to provide it!\r\n    public getUserInfo() { \r\n        return this.$localStorage.user.data.user[0]; \r\n    } \r\n}\r\n\r\neventApp.service('AuthService', AuthService.angularDependencies); \r\n\r\n\r\n"]}